# require('./js/helpers').initTest() if not global.test
# _ = require 'underscore'

# @if 0 then yes @else no
# @if 0 @then yes @else no

# @if o.Debug
    # log 'Debug'
    
@dbg 'fark' ['123', Math.sin 1]
# @dbg 'fark' a, f 1

# a = 'world'
# b = '!!!!!'
# @if @rand then f = Math.sin @else f = Math.cos
# @dbg 'hello' a
# @dbg a
# @dbg hello:a
# @dbg 'fark' hello:a
# @dbg 'fark' hello:a, bark:b
# @dbg 'fark' hello:a, bark:b
# @dbg 'fark' {a, b}
# @dbg 'fark' ["a:", a, "b:", b]
    
# @if os.platform() == 'win32'
    # log 'windows'
# @elif os.platform() == 'darwin'
    # log 'mac'
# @else
    # log 'unknown'

#class Animal
#    @: -> @.constructor.wasCreated()
#    @wasCreated = -> log "Animal created"
#
#class Cat extends Animal
#    @wasCreated = -> log "Cat created"
#
#new Animal
#new Cat

# @if @start start then
# @if @end start then

# @start all

# @if @profile
    # @if @profile then walk = require 'walkdir'

# @profile(hello3) walk.sync './test'
# @profile hello1  Math.ceil(0.5); @if @profile then Math.sin(0.5)    
# @profile 'adsd' walk.sync '/Users/kodi/s/ko'
# @if @profile 123 then walk.sync '/Users/kodi/s/koffee'
# @if @profile then walk.sync '/Users/kodi/s/kappo'

# @profile hello1
    # @profile hello2  Math.ceil(0.5); @if @profile then Math.sin(0.5)    
    # @if @profile 123 then walk.sync '/Users/kodi/s/koffee'
    # @profile 'adsd' walk.sync '/Users/kodi/s/ko'
    # @if @profile then walk.sync '/Users/kodi/s/kork'
    # @profile(hello3) walk.sync './test'

# @end all
#     
# @profile
    # @profile fs = require 'fs'
    # @profile fs.readdirSync '.'
    # @profile fs.readdirSync '.'
    # @profile fs.readdirSync '.'

# @if @profile
    # log 'hello'
# @if @rand 0.9
    # @if @rand 
        # @if @rand 0.2 
            # log '1' 
        # @else
            # log '2'
    # @else
        # log '3'
# @else log '4'

# @if ('if' in process.argv) 
    # log 'IF', process.argv
# @elif ('elif' in process.argv) 
    # log 'ELIF', process.argv
# @else 
    # log 'ELSE', process.argv

# if false then log 'NEVER' else log 'NORM'
# @if false then log 'NEVER' @else log 'META'

# log @if true @then yes @else no
# log @if true @then yes @else 
    # @if 1+1 and a @then 'b'

# class A
    # @: -> @if() == 'if'
    # @if: -> 'if'

# a = 1
# @if a?
    # log 'EXIST'
#     
# log if a? then 'EXISTS'
# log @if a? then 'EXISTS'

# log @if a
        # 'EXISTS' 
    # @else 
        # 'ELSE'

# log @if not a
        # 'EXISTS' 
    # @else 
        # 'ELSE'
        
# @if false and 1
    # log 'IF'
    # # if false then log 'FALSE' else log 'TRUE'
# @else @if true
    # if true then log 'ELIF' else log 'BLA'
# @else
    # log 'HELLO'

# eq s[ -2 ], 'e'

# tokens = [ [1] , [2] , [3] ]

# class A
    # @: (@tokens) ->
        # log (@tokens)[-1]
        # log @tokens[-1]
#         
# new A tokens

# @if base
    # console.log 'hello'
    
# class B
    # @: (@b:777, @c:, @f:null) ->

# class A extends B
    # @: (@a : 666, @c : 888) -> super

# console.log new A {}
    
# (o = {block: yes}) ->
# ( a, b=1 c=2 ) ->
# ( a:1 b:2 ) ->

# f = (a:a,a:b,c:1)-> log a, b, c
# f a:2

# a = ['a' null undefined true false]

# ([{a: [b], c}]...) ->

# (([{a: [b], c}]...) ->
    # eq 1, b
    # eq 2, c
# ) {a: [1], c: 2}

# class A
    # @: ( @arg, @a:1, @b:2, @c=2 ) ->
#     
# a = new A null, b:4, 3
# log a

# log b: [ c:2 'd' 3 ]  

# log [ [], [] ]

# log a
# a = { a:1 b:2 }

# a = [1 2 - 3 x 4 + 5 'a' b 'c']

#_   = require 'underscore'
#log = console.log
#eq  = (a,b) -> log "fail: #{a} != #{b}" if a != b
#
#log 'test...', process.argv
#
#"123".length
#
#"123"[-1]
#
#eq "123"[-1], '3'
#
#class C 
#  @: (@a:1, @b:) -> #log {@a,@b}
#    
#class D extends C
#  @: (@a:3, @b:4) -> super
#
#f = new C {}
#eq f.a, 1
#eq f.b, null
#
#f = new C b:2
#
#eq f.a, 1
#eq f.b, 2
#
#d = new D a:8
#
#eq d.a, 8
#eq d.b, 4
#
#log '...done'